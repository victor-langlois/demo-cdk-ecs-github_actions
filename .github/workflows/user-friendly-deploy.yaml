name: üöÄ D√©ployer une application
on:
  workflow_dispatch:
    inputs:
      deployment_type:
        description: "Type de d√©ploiement"
        required: true
        type: choice
        options:
          - "Nouvelle version d'application seulement (rapide)"
          - "Environnement complet (infrastructure + application)"
        default: "Nouvelle version d'application seulement (rapide)"
      branch_name:
        description: "Nom de la branche √† d√©ployer"
        required: true
        type: string
        default: "dev"
      environment_name:
        description: "Nom de l'environnement (par d√©faut: m√™me que la branche)"
        required: false
        type: string

jobs:
  prepare_deployment:
    name: Pr√©parer le d√©ploiement
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.set_values.outputs.branch }}
      env_name: ${{ steps.set_values.outputs.env_name }}
      deployment_type: ${{ steps.set_values.outputs.deployment_type }}
    steps:
      - name: √âtablir les valeurs
        id: set_values
        run: |
          # D√©finir le nom de la branche
          BRANCH="${{ github.event.inputs.branch_name }}"
          echo "branch=$BRANCH" >> $GITHUB_OUTPUT
          
          # D√©finir le nom de l'environnement (utiliser le nom de branche si non fourni)
          if [ -z "${{ github.event.inputs.environment_name }}" ]; then
            ENV_NAME="${BRANCH}"
          else
            ENV_NAME="${{ github.event.inputs.environment_name }}"
          fi
          echo "env_name=$ENV_NAME" >> $GITHUB_OUTPUT
          
          # D√©finir le type de d√©ploiement (1=app only, 2=full)
          if [ "${{ github.event.inputs.deployment_type }}" = "Nouvelle version d'application seulement (rapide)" ]; then
            echo "deployment_type=app_only" >> $GITHUB_OUTPUT
          else
            echo "deployment_type=full" >> $GITHUB_OUTPUT
          fi
          
          # Afficher un r√©sum√©
          echo "üëâ Nom de branche: $BRANCH"
          echo "üëâ Nom d'environnement: $ENV_NAME"
          echo "üëâ Type de d√©ploiement: ${{ github.event.inputs.deployment_type }}"

  trigger_app_only:
    name: D√©ployer la nouvelle version d'application
    needs: prepare_deployment
    if: needs.prepare_deployment.outputs.deployment_type == 'app_only'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: D√©clencher le d√©ploiement d'application
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'app-only-deploy.yaml',
              ref: 'main',
              inputs: {
                environment_name: '${{ needs.prepare_deployment.outputs.env_name }}'
              }
            })
            console.log("‚úÖ D√©ploiement d'application lanc√© pour l'environnement: ${{ needs.prepare_deployment.outputs.env_name }}")

  trigger_full_deploy:
    name: D√©ployer l'environnement complet
    needs: prepare_deployment
    if: needs.prepare_deployment.outputs.deployment_type == 'full'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: D√©clencher le d√©ploiement complet
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'branch-deploy.yaml',
              ref: 'main',
              inputs: {
                branch_name: '${{ needs.prepare_deployment.outputs.branch }}'
              }
            })
            console.log("‚úÖ D√©ploiement complet lanc√© pour la branche: ${{ needs.prepare_deployment.outputs.branch }}")

  show_success:
    name: Afficher le succ√®s
    needs: [prepare_deployment, trigger_app_only, trigger_full_deploy]
    if: always() && (needs.trigger_app_only.result == 'success' || needs.trigger_full_deploy.result == 'success')
    runs-on: ubuntu-latest
    steps:
      - name: Message de succ√®s
        run: |
          echo "‚úÖ Le d√©ploiement a √©t√© lanc√© avec succ√®s!"
          echo "üìä D√©tails du d√©ploiement:"
          echo "  ‚Ä¢ Type: ${{ github.event.inputs.deployment_type }}"
          echo "  ‚Ä¢ Branche: ${{ needs.prepare_deployment.outputs.branch }}"
          echo "  ‚Ä¢ Environnement: ${{ needs.prepare_deployment.outputs.env_name }}"
          
          if [ "${{ needs.prepare_deployment.outputs.deployment_type }}" = "app_only" ]; then
            echo ""
            echo "üîç Vous pouvez suivre le progr√®s dans l'onglet Actions"
          else
            echo ""
            echo "‚è≥ Le d√©ploiement complet a √©t√© lanc√© et prendra plus de temps"
            echo "üîç Vous pouvez suivre le progr√®s dans l'onglet Actions"
          fi 
