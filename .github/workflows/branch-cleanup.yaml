name: Branch Environment Cleanup
on:
  delete:
  workflow_dispatch:
    inputs:
      branch_name:
        description: 'Branch name to clean up (if manual trigger)'
        required: true
        type: string

env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  AWS_ACCOUNT_ID: ${{ vars.AWS_ACCOUNT_ID }}
  APPLICATION_ID: ${{ vars.APPLICATION_ID }}

jobs:
  validate_branch_name:
    name: Validate Branch Name
    runs-on: ubuntu-latest
    outputs:
      branch_name: ${{ steps.clean_branch_name.outputs.result }}
    steps:
      - name: Set branch name
        id: set_branch
        run: |
          if [ "${{ github.event_name }}" = "delete" ]; then
            echo "BRANCH_NAME=${{ github.event.ref }}" >> $GITHUB_ENV
          else
            echo "BRANCH_NAME=${{ github.event.inputs.branch_name }}" >> $GITHUB_ENV
          fi
      - name: Clean branch name for resource naming
        id: clean_branch_name
        uses: actions/github-script@v6
        with:
          script: |
            // Create a valid name for AWS resources
            // Replace invalid characters, truncate if too long
            const branchName = '${{ env.BRANCH_NAME }}'
              .toLowerCase()
              .replace(/[^a-z0-9]/g, '-')
              .replace(/-+/g, '-')
              .replace(/^-|-$/g, '');
            
            // Ensure it's not too long (max 63 chars for many AWS resources)
            const truncated = branchName.substring(0, 20);
            console.log(`Original branch name: ${{ env.BRANCH_NAME }}`);
            console.log(`Sanitized branch name: ${truncated}`);
            return truncated;

  cleanup:
    name: Destroy Branch Environment Resources
    needs: validate_branch_name
    runs-on: ubuntu-latest
    environment: Development
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ vars.AWS_ROLE}}
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "yarn"
          cache-dependency-path: infra/yarn.lock
      - name: Set environment variables
        run: |
          echo "ENVIRONMENT=${{ needs.validate_branch_name.outputs.branch_name }}" >> $GITHUB_ENV
          echo "PREFIX=${{ vars.APPLICATION_ID }}-${{ needs.validate_branch_name.outputs.branch_name }}" >> $GITHUB_ENV
      - name: Install project dependencies
        run: cd infra && yarn install
      - name: Destroy ECS Stack
        working-directory: infra
        run: |
          yarn cdk destroy ${{ vars.APPLICATION_ID }}-${{ needs.validate_branch_name.outputs.branch_name }}-ecs-stack --force
      - name: Destroy ECR Stack  
        working-directory: infra
        run: |
          yarn cdk destroy ${{ vars.APPLICATION_ID }}-${{ needs.validate_branch_name.outputs.branch_name }}-ecr-stack --force
      - name: Destroy IAM Stack
        working-directory: infra
        run: |
          yarn cdk destroy ${{ vars.APPLICATION_ID }}-${{ needs.validate_branch_name.outputs.branch_name }}-iam-stack --force 
